/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    boolean flag=true;
    public boolean isBalanced(TreeNode root) 
    {
        if(root!=null)
        {
            if(Math.abs(hight(root.left)-hight(root.right))>1)
            {
                flag=false;
            }
            isBalanced(root.left);
            isBalanced(root.right);
            
        }
        return flag;        
    }

    public int hight(TreeNode node)
    {
        if(node==null)
        {
            return 0;
        }
        int left=hight(node.left);
        int right=hight(node.right);
        return Math.max(left,right)+1;
    }
}
