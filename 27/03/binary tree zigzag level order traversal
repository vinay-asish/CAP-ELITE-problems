/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) 
    {
        int flag=2;
        List<List<Integer>> result= new ArrayList<>();
        Queue<TreeNode> queue= new LinkedList<>();
        if(root!=null)
        {
            queue.add(root);
            while(!queue.isEmpty())
            {
                List<Integer> l= new ArrayList<>();
                int size=queue.size();
                for(int i=0;i<size;i++)
                {
                    TreeNode temp=queue.poll();
                    l.add(temp.val);
                    if(temp.left!=null)
                    {
                        queue.add(temp.left);
                    }
                    if(temp.right!=null)
                    {
                        {
                            queue.add(temp.right);
                        }
                    }
                }
                if(flag%2==0)
                {
                    result.add(l);
                }
                else{
                    Collections.reverse(l);
                    result.add(l);
                }
                flag=flag+1;
            }
        }
        return result;
    }
}
